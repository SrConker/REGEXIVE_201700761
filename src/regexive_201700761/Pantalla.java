package regexive_201700761;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import com.sun.istack.internal.logging.Logger;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author Elder
 */
public class Pantalla extends javax.swing.JFrame {
    public String ruta = "";
    public Pantalla() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 0, 0));
        jPanel1.setForeground(new java.awt.Color(153, 0, 0));
        jPanel1.setAutoscrolls(true);

        jLabel1.setText("Archivo de Entrada:");

        txtArea.setColumns(20);
        txtArea.setRows(5);
        txtArea.setText("//Al cargar un archivo, se desplegará aquí");
        jScrollPane1.setViewportView(txtArea);
        txtArea.getAccessibleContext().setAccessibleName("");
        txtArea.getAccessibleContext().setAccessibleDescription("");

        jButton1.setText("Analizar Entrada y Generar Árbol y Thompson");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(22, 22, 22)
                            .addComponent(jLabel1)
                            .addGap(416, 416, 416)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("Archivo");

        jMenuItem1.setText("Abrir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setText("Guardar");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Guardar como...");
        jMenuItem4.setActionCommand("Guardar_Como");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setText("Generar XML de Salida");
        jMenuItem5.setActionCommand("Generar");
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Opciones");

        jMenuItem2.setActionCommand("Salir");
        jMenuItem2.setLabel("Salir");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem6.setText("Limpiar Texto");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem7.setText("Acerca De...");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        JOptionPane.showMessageDialog(null, "Gracias por preferirnos. Cerrando programa.");
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed
   
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //A analizar esta chingadera pues
        if (ruta.equals("")) {
            JOptionPane.showMessageDialog(null,"No se ha seleccionado archivo");
        }else{
            analizadores.Sintactico parse;
            try {
                parse = new analizadores.Sintactico(new analizadores.Lexico(new BufferedReader(new FileReader(ruta))));
                parse.parse(); 
                Manejador.obtenerInstancia().setConjuntos(parse.informacion.get(0));
                Manejador.obtenerInstancia().setExpresiones(parse.informacion.get(1));
                Manejador.obtenerInstancia().setAnalisis(parse.informacion.get(2));
                System.out.println("Todo correcto y yo que me alegro :D");
                    for(Recopilador reco: Manejador.obtenerInstancia().getExpresiones()){
                        System.out.println(reco.toString());
                    }
            } catch (Exception ex) {
                System.out.println("Error fatal en compilación de entrada.");
                System.out.println("Causa: "+ex.getCause());
            }
            try {
                Manejador.obtenerInstancia().llenadoArbolito();
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
         //Método para abrir un archivo
        JFileChooser pantallaCarga = new JFileChooser();
        pantallaCarga.setFileFilter(new FileNameExtensionFilter("Todos los archivos *.olc", "olc", "OLC"));
        int abrirRuta = pantallaCarga.showDialog(null, "Abrir:");
        if (abrirRuta == JFileChooser.APPROVE_OPTION) {
            FileReader file = null;
            BufferedReader buff = null;
            try {
                File archivo = pantallaCarga.getSelectedFile();
                String RutaM = pantallaCarga.getSelectedFile().getAbsolutePath();
                if (RutaM.endsWith(".OLC") || RutaM.endsWith(".Olc") || RutaM.endsWith(".olc")) {
                    file = new FileReader(archivo);
                    buff = new BufferedReader(file);
                    String linea;
                    String contenido = "";
                    ruta = RutaM;
                    txtArea.setText(null);
                    while ((linea = buff.readLine()) != null) {
                        contenido += linea + "\n";
                    }
                    txtArea.setText(contenido);
                } else{
                    JOptionPane.showMessageDialog(this, "El archivo tuvo un error, no se pudo abrir", "Fatal Error", JOptionPane.ERROR_MESSAGE);    
                }
            } catch (FileNotFoundException ex) {
                java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        //Acá vamos a limpiar de manera profesional nuestro texto
        txtArea.setText("//Al cargar un archivo, se desplegará aquí");
        ruta = "";
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        //Método para guardar normalmente
        if (ruta != null) {
            try {
                FileWriter filewriter = new FileWriter(ruta);
                PrintWriter printwriter = new PrintWriter(filewriter);
                String[] texto = txtArea.getText().split("\n");
                for (String e: texto){
                    printwriter.println(e);
                }
                filewriter.close();
                JOptionPane.showMessageDialog(null, "Archivo guardado con éxito", "Información", JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            //Si no existe la ruta
            JFileChooser pantallaCarga = new JFileChooser();
            pantallaCarga.addChoosableFileFilter(new FileNameExtensionFilter("Todos los archivos *.olc", "olc", "OLC"));
            int seleccionar = pantallaCarga.showSaveDialog(null);
            try {
                if (seleccionar == JFileChooser.APPROVE_OPTION) {
                    File file = pantallaCarga.getSelectedFile();
                    String path = file.getAbsolutePath();
                    if (!(path.endsWith(".olc"))) {
                        File aux = new File(path + ".olc");
                        file = aux;
                    }
                    PrintWriter printwriter = new PrintWriter(file);
                    printwriter.print(txtArea.getText());
                    printwriter.close();
                    ruta = file.getAbsolutePath();
                    JOptionPane.showMessageDialog(null, "Se ha guardado correctamente el archivo", "Información", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (FileNotFoundException ex) {
                java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        //Para guardar con formato específico o nombre en específico
        JFileChooser pantallaCarga = new JFileChooser();
        pantallaCarga.addChoosableFileFilter(new FileNameExtensionFilter("Todos los archivos *.olc", "olc", "OLC"));
        int seleccionar = pantallaCarga.showSaveDialog(null);
        try {
            if (seleccionar == JFileChooser.APPROVE_OPTION) {
                File file = pantallaCarga.getSelectedFile();
                String path = file.getAbsolutePath();
                if (!(path.endsWith(".olc"))) {
                    File aux = new File(path + ".olc");
                    file = aux;
                }
                PrintWriter printwriter = new PrintWriter(file);
                printwriter.print(txtArea.getText());
                printwriter.close();
                ruta = file.getAbsolutePath();
                System.out.print(ruta);
                JOptionPane.showMessageDialog(null, "Se ha guardado correctamente el archivo", "Información", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (FileNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        //Acerca de del estudiante
        AcercaDe acerca = new AcercaDe();
        acerca.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pantalla().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtArea;
    // End of variables declaration//GEN-END:variables
}
